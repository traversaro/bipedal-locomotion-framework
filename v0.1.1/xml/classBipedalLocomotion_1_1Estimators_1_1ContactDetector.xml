<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::ContactDetector</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; EstimatedContactList &gt;</basecompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::SchmittTriggerDetector</derivedcompoundref>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8" prot="protected" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8a9646ad3a1c3e708b4fa8b4b4270fbab6" prot="protected">
          <name>NotInitialized</name>
          <briefdescription>
<para>The estimator is not initialized yet call FloatingBaseEstimator::initialze method to initialize it. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8a59d87a4758a9d35fbaf6b204341bb399" prot="protected">
          <name>Initialized</name>
          <briefdescription>
<para>The estimator is initialized and ready to be used. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8a5bda814c4aedb126839228f1a3d92f09" prot="protected">
          <name>Running</name>
          <briefdescription>
<para>The estimator is running. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used to determine the running state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="97" column="5" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="98" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a3152f0d5abcae374fb78214c75bf2e44" prot="protected" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8" kindref="member">State</ref></type>
        <definition>State BipedalLocomotion::Estimators::ContactDetector::m_detectorState</definition>
        <argsstring></argsstring>
        <name>m_detectorState</name>
        <initializer>{<ref refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8a9646ad3a1c3e708b4fa8b4b4270fbab6" kindref="member">State::NotInitialized</ref>}</initializer>
        <briefdescription>
<para>State of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="105" column="11" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1aae40f667ae998fd8bc544014eec8820e" prot="protected" static="no" mutable="no">
        <type>EstimatedContactList</type>
        <definition>EstimatedContactList BipedalLocomotion::Estimators::ContactDetector::m_contactStates</definition>
        <argsstring></argsstring>
        <name>m_contactStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="106" column="26" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a553f01f853020e92ed98242cb9e23b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Estimators::ContactDetector::~ContactDetector</definition>
        <argsstring>()</argsstring>
        <name>~ContactDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="28" column="13" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a2d71eeee88a937759f9fc7fb7b50c2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::ContactDetector::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Configure generic parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the generic parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="35" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a368fbc6a7fa9c9707e26389b76556e19" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::ContactDetector::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a766b2a1d75a733ec09016adf1cb75e10">advance</reimplements>
        <briefdescription>
<para>Compute one step of the detector The derived class must implement its own methods for setting measurements and update states to be called within the <ref refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a368fbc6a7fa9c9707e26389b76556e19" kindref="member">advance()</ref> method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="43" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a74cb220af98a21028b75ccde6b3c669b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::ContactDetector::resetContacts</definition>
        <argsstring>() final</argsstring>
        <name>resetContacts</name>
        <briefdescription>
<para>Reset the internal contact states of the detector to false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ace77fadd74924bd91770cd5a85784a55" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const EstimatedContactList &amp;</type>
        <definition>virtual const EstimatedContactList&amp; BipedalLocomotion::Estimators::ContactDetector::get</definition>
        <argsstring>() const final</argsstring>
        <name>get</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ab0ecf6787eae22b06d9f9bfd8ed68184">get</reimplements>
        <briefdescription>
<para>Get contact states. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>container of contacts </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="56" column="40"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a0684227e2e364e19c4f17f6079700dc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::ContactDetector::get</definition>
        <argsstring>(const std::string &amp;contactName, BipedalLocomotion::Contacts::EstimatedContact &amp;contact) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">BipedalLocomotion::Contacts::EstimatedContact</ref> &amp;</type>
          <declname>contact</declname>
        </param>
        <briefdescription>
<para>Get state of specific contact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">contact</parametername>
</parameternamelist>
<parameterdescription>
<para>estimated contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if contact exists, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ae2682ecdeb7341249be97a6a86a7894e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">BipedalLocomotion::Contacts::EstimatedContact</ref></type>
        <definition>BipedalLocomotion::Contacts::EstimatedContact BipedalLocomotion::Estimators::ContactDetector::get</definition>
        <argsstring>(const std::string &amp;contactName) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <briefdescription>
<para>Get state of specific contact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>contact state if contact exists, a dummy contact otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="71" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1afbd97515bbbc79855a2d08bb62f01a63" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::ContactDetector::isValid</definition>
        <argsstring>() const final</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae05561bcb6de140d2269b7ca490d711d">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ace77fadd74924bd91770cd5a85784a55" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="77" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a71ccc022cfdd914ba5178a488b4aab08" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::ContactDetector::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>customInitialization</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1abffa6c0ad02107a8740548ea4ce07850">customInitialization</reimplementedby>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>These custom parameter specifications should be specified by the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="85" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a4427d21309459cf7b5c1b80f6c459803" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::ContactDetector::updateContactStates</definition>
        <argsstring>()</argsstring>
        <name>updateContactStates</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a567965bf4ef87820b3b5cfa340b4a322">updateContactStates</reimplementedby>
        <briefdescription>
<para>The derived class must implement the contact detection technique to update the contact states. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="91" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BipedalLocomotion::Estimators::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>BipedalLocomotion::Contacts::EstimatedContact</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>K</label>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="9">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="4">
        <label>std::unordered_map&lt; std::string, BipedalLocomotion::Contacts::EstimatedContact &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; std::string, BipedalLocomotion::Contacts::EstimatedContact &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::Contacts::ContactBase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase"/>
        <childnode refid="7" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_contactStates</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="25" column="1" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="26" bodyend="107"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a368fbc6a7fa9c9707e26389b76556e19" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a71ccc022cfdd914ba5178a488b4aab08" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ace77fadd74924bd91770cd5a85784a55" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a0684227e2e364e19c4f17f6079700dc0" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ae2682ecdeb7341249be97a6a86a7894e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a2d71eeee88a937759f9fc7fb7b50c2aa" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1afbd97515bbbc79855a2d08bb62f01a63" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1aae40f667ae998fd8bc544014eec8820e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>m_contactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a3152f0d5abcae374fb78214c75bf2e44" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>m_detectorState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a74cb220af98a21028b75ccde6b3c669b" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>resetContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a4427d21309459cf7b5c1b80f6c459803" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>updateContactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a553f01f853020e92ed98242cb9e23b00" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::ContactDetector</scope><name>~ContactDetector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
