<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::FloatingBaseEstimator</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; FloatingBaseEstimators::Output &gt;</basecompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</derivedcompoundref>
    <includes local="no">BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h</includes>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" prot="public">BipedalLocomotion::Estimators::FloatingBaseEstimator::ModelComputations</innerclass>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" prot="protected" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a9646ad3a1c3e708b4fa8b4b4270fbab6" prot="protected">
          <name>NotInitialized</name>
          <briefdescription>
<para>The estimator is not initialized yet call FloatingBaseEstimator::initialze method to initialize it. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a59d87a4758a9d35fbaf6b204341bb399" prot="protected">
          <name>Initialized</name>
          <briefdescription>
<para>The estimator is initialized and ready to be used. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a5bda814c4aedb126839228f1a3d92f09" prot="protected">
          <name>Running</name>
          <briefdescription>
<para>The estimator is running. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used to determine the running state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="351" column="5" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="352" bodyend="357"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1e23695506ec5bd1b3bccc32fe2ac75a" prot="protected" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref></type>
        <definition>ModelComputations BipedalLocomotion::Estimators::FloatingBaseEstimator::m_modelComp</definition>
        <argsstring></argsstring>
        <name>m_modelComp</name>
        <briefdescription>
<para>Model computations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="340" column="23" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a620d1da852a07960e55a6dd8a53fd1a5" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Options" kindref="compound">FloatingBaseEstimators::Options</ref></type>
        <definition>FloatingBaseEstimators::Options BipedalLocomotion::Estimators::FloatingBaseEstimator::m_options</definition>
        <argsstring></argsstring>
        <name>m_options</name>
        <briefdescription>
<para>Struct holding estimator options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="341" column="37" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a39e4591671b56359f28884caa4a0a5cf" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref></type>
        <definition>FloatingBaseEstimators::Measurements BipedalLocomotion::Estimators::FloatingBaseEstimator::m_meas</definition>
        <argsstring></argsstring>
        <name>m_meas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="342" column="42" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a17e146652bf36d8a62bae4f217a26294" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref></type>
        <definition>FloatingBaseEstimators::Measurements BipedalLocomotion::Estimators::FloatingBaseEstimator::m_measPrev</definition>
        <argsstring></argsstring>
        <name>m_measPrev</name>
        <briefdescription>
<para>Struct holding the latest measurements that were set to the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="342" column="49" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6c98bb1f972363c0f1b795bdcd50f5fd" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref></type>
        <definition>FloatingBaseEstimators::InternalState BipedalLocomotion::Estimators::FloatingBaseEstimator::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="343" column="43" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac13379b400e3a5448370d62a60495c48" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref></type>
        <definition>FloatingBaseEstimators::InternalState BipedalLocomotion::Estimators::FloatingBaseEstimator::m_statePrev</definition>
        <argsstring></argsstring>
        <name>m_statePrev</name>
        <briefdescription>
<para>Structs holding the curent and previous internal states of the estimation algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="343" column="51" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a7a69586c1a993d3abc61c786d25b88c1" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output" kindref="compound">FloatingBaseEstimators::Output</ref></type>
        <definition>FloatingBaseEstimators::Output BipedalLocomotion::Estimators::FloatingBaseEstimator::m_estimatorOut</definition>
        <argsstring></argsstring>
        <name>m_estimatorOut</name>
        <briefdescription>
<para>Struct holding outputs of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="344" column="36" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a9a0355d4b8a11e747d2180c55cba64" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref></type>
        <definition>FloatingBaseEstimators::StateStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_priors</definition>
        <argsstring></argsstring>
        <name>m_priors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="345" column="41" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad3c4555ded287bb1450dd9b664705c7c" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref></type>
        <definition>FloatingBaseEstimators::StateStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_stateStdDev</definition>
        <argsstring></argsstring>
        <name>m_stateStdDev</name>
        <briefdescription>
<para>Struct holding standard deviations associated to prior state estimates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="345" column="50" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a762098fd8fe1158f163209402db0d1" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev" kindref="compound">FloatingBaseEstimators::SensorsStdDev</ref></type>
        <definition>FloatingBaseEstimators::SensorsStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_sensorsDev</definition>
        <argsstring></argsstring>
        <name>m_sensorsDev</name>
        <briefdescription>
<para>Struct holding standard deviations associated to sensor measurements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="346" column="43" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a67d83d2880b0c9e7e279410081138bd7" prot="protected" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" kindref="member">State</ref></type>
        <definition>State BipedalLocomotion::Estimators::FloatingBaseEstimator::m_estimatorState</definition>
        <argsstring></argsstring>
        <name>m_estimatorState</name>
        <initializer>{<ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a9646ad3a1c3e708b4fa8b4b4270fbab6" kindref="member">State::NotInitialized</ref>}</initializer>
        <briefdescription>
<para>State of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="359" column="11" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a73f6c5a571246a976c534dbf0c8485c9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Estimators::FloatingBaseEstimator::m_dt</definition>
        <argsstring></argsstring>
        <name>m_dt</name>
        <initializer>{0.01}</initializer>
        <briefdescription>
<para>Fixed time step of the estimator, in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="361" column="12" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ab24dc4ee5a3afb031812df139a3dbd09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Estimators::FloatingBaseEstimator::~FloatingBaseEstimator</definition>
        <argsstring>()</argsstring>
        <name>~FloatingBaseEstimator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="36" column="13" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a5ee4344d0fd1353e91c52ef15d8ff61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler, const iDynTree::Model &amp;model)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Configure generic parameters and the model. </para>
        </briefdescription>
        <detaileddescription>
<para>The generic parameters include,<itemizedlist>
<listitem><para>sampling_period_in_s [PARAMETER|REQUIRED|Sampling period of the estimator in seconds]</para>
</listitem><listitem><para>ModelInfo [GROUP|REQUIRED|URDF Model specific parameters used by the estimator]<itemizedlist>
<listitem><para>base_link [PARAMETER|REQUIRED|base link frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>base_link_imu [PARAMETER|REQUIRED|IMU frame rigidly attached to thebase link from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>left_foot_contact_frame [PARAMETER|REQUIRED|left foot contact frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>right_foot_contact_frame [PARAMETER|REQUIRED|right foot contact frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP] <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the generic parameters for the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model</parametername>
</parameternamelist>
<parameterdescription>
<para>reduced iDynTree model required by the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>any custom initialization of parameters or the algorithm implementation is not done here, it must be done in <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> by the child class implementing the algorithm </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a2ccbfaf83d8eed0fe3b0b5ca46017ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setIMUMeasurement</definition>
        <argsstring>(const Eigen::Vector3d &amp;accMeas, const Eigen::Vector3d &amp;gyroMeas)</argsstring>
        <name>setIMUMeasurement</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>accMeas</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>gyroMeas</declname>
        </param>
        <briefdescription>
<para>Set the polled IMU measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">accMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>linear accelerometer measurement expressed in the local IMU frame (m/s^2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gyroMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>gyroscope measurement expressed in the local IMU frame (rad/s) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="163" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a776353b9fda2354f3f7eb0c80940ca49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setContacts</definition>
        <argsstring>(const bool &amp;lfInContact, const bool &amp;rfInContact)</argsstring>
        <name>setContacts</name>
        <param>
          <type>const bool &amp;</type>
          <declname>lfInContact</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>rfInContact</declname>
        </param>
        <briefdescription>
<para>Set feet contact states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lfInContact</parametername>
</parameternamelist>
<parameterdescription>
<para>left foot contact state [0, 1] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rfInContact</parametername>
</parameternamelist>
<parameterdescription>
<para>right foot contact state [0, 1] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="172" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad203e691ae8d7d8b41da86b2e081267b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setKinematics</definition>
        <argsstring>(const Eigen::VectorXd &amp;encoders, const Eigen::VectorXd &amp;encoderSpeeds)</argsstring>
        <name>setKinematics</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>encoders</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>encoderSpeeds</declname>
        </param>
        <briefdescription>
<para>Set kinematic measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it is assumed that the order of the joints loaded in the model and the order of the measurements in these vectors match </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">encoders</parametername>
</parameternamelist>
<parameterdescription>
<para>joint positions measured through encoders </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">encoderSpeeds</parametername>
</parameternamelist>
<parameterdescription>
<para>joint velocities measured through encoders </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a766b2a1d75a733ec09016adf1cb75e10">advance</reimplements>
        <briefdescription>
<para>Compute one step of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="188" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a529f9d8ec5ff8448a6ee853f03c99a90" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;newState) final</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
<para>Reset the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newState</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal state of the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="197" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abbba797785c6492b25395122e4694432" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const Eigen::Quaterniond &amp;newBaseOrientation, const Eigen::Vector3d &amp;newBasePosition) final</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const Eigen::Quaterniond &amp;</type>
          <declname>newBaseOrientation</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>newBasePosition</declname>
        </param>
        <briefdescription>
<para>Reset the base pose estimate and consequently the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newBaseOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>base link orientation as a Eigen quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newBasePosition</parametername>
</parameternamelist>
<parameterdescription>
<para>base link position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<itemizedlist>
<listitem><para><simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="207" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9109beb3315d981d80e8d817d7b56818" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output" kindref="compound">FloatingBaseEstimators::Output</ref> &amp;</type>
        <definition>virtual const FloatingBaseEstimators::Output&amp; BipedalLocomotion::Estimators::FloatingBaseEstimator::get</definition>
        <argsstring>() const final</argsstring>
        <name>get</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ab0ecf6787eae22b06d9f9bfd8ed68184">get</reimplements>
        <briefdescription>
<para>Get estimator outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A struct containing he estimated internal states of the estiamtor and the associated covariance matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="214" column="50"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8ed3453160e5ed65062ddf36700db336" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::isValid</definition>
        <argsstring>() const final</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae05561bcb6de140d2269b7ca490d711d">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9109beb3315d981d80e8d817d7b56818" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="220" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aad3b0c5d6736bdc39e501833d6fd7dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> &amp;</type>
        <definition>ModelComputations&amp; BipedalLocomotion::Estimators::FloatingBaseEstimator::modelComputations</definition>
        <argsstring>()</argsstring>
        <name>modelComputations</name>
        <briefdescription>
<para>Get <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> object by reference. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> object providing information between considered model related quantities in the estimator like the base link, IMU, feet contact frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="227" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Configure generic parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the generic parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="235" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>customInitialization</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a88d89de191ce004ad8fc1556f635f4d0">customInitialization</reimplementedby>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>These custom parameter specifications should be specified by the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;Options&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;SensorsStdDev&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;InitialStates&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;PriorsStdDev&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> for relevant parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="250" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a26c64914587b18e5eaa2f8b8df321446" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::predictState</definition>
        <argsstring>(const FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt)</argsstring>
        <name>predictState</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a66a181d6038b6b61030bf51a86426afa">predictState</reimplementedby>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Propagate the states through the prediction model, if there exists any (eg. </para>
        </briefdescription>
        <detaileddescription>
<para>a strap-down IMU model) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements passed as exogeneous inputs to the prediction model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state estimate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">P</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state covariance matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="260" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="260" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abb02ba0cfa179ff2e2ede5a51894f079" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::updateKinematics</definition>
        <argsstring>(const FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt)</argsstring>
        <name>updateKinematics</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1afb7b1c76913f5166d0e4ce6641466d91">updateKinematics</reimplementedby>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update the predicted state estimates using kinematics and contact measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements to update the predicted states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="269" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="269" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupOptions</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupOptions</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup estimator options. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the Options group are,<itemizedlist>
<listitem><para>enable_imu_bias_estimation [PARAMETER|-|Enable/disable IMU bias estimation]</para>
</listitem><listitem><para>enable_static_imu_bias_initialization [PARAMETER|-|Enable/disable IMU bias initialization assuming static configuration]</para>
</listitem><listitem><para>nr_samples_for_imu_bias_initialization [PARAMETER|REQUIRED, if staticImuBiasInitializationEnabled is set to true|Number of samples for static bias initialization]</para>
</listitem><listitem><para>enable_ekf_update [PARAMETER|-|Enable/disable update step of EKF (not recommended to set to false)]</para>
</listitem><listitem><para>acceleration_due_to_gravity [PARAMETER|-|Acceleration due to gravity, 3d vector] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="283" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupSensorDevs</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupSensorDevs</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup measurement noise standard deviations The parameters in the SensorsStdDev group are,. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>accelerometer_measurement_noise_std_dev [PARAMETER|REQUIRED|Accelerometer measurement white noise deviation]</para>
</listitem><listitem><para>gyroscope_measurement_noise_std_dev [PARAMETER|REQUIRED|Gyroscope measurement white noise deviation]</para>
</listitem><listitem><para>accelerometer_measurement_bias_noise_std_dev [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Accelerometer measurement bias noise deviation]</para>
</listitem><listitem><para>gyroscope_measurement_bias_noise_std_dev [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Gyroscope measurement bias noise deviation]</para>
</listitem><listitem><para>contact_foot_linear_velocity_noise_std_dev [PARAMETER|REQUIRED|Linear velocity white noise deviation when foot is in contact]</para>
</listitem><listitem><para>contact_foot_angular_velocity_noise_std_dev [PARAMETER|REQUIRED|Angular velocity white noise deviation when foot is in contact]</para>
</listitem><listitem><para>swing_foot_linear_velocity_noise_std_dev [PARAMETER|REQUIRED|Linear velocity white noise deviation when foot is swinging off contact]</para>
</listitem><listitem><para>swing_foot_angular_velocity_noise_std_dev [PARAMETER|REQUIRED|Angular velocity white noise deviation when foot is swinging off contact]</para>
</listitem><listitem><para>forward_kinematic_measurement_noise_std_dev [PARAMETER|REQUIRED|White noise deviation in relative poses computed through forward kinematics]</para>
</listitem><listitem><para>encoders_measurement_noise_std_dev [PARAMETER|REQUIRED|Encoder measurement white noise deviation] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupInitialStates</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupInitialStates</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup initial states. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the InitialStates group are,<itemizedlist>
<listitem><para>imu_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial IMU orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>imu_position_xyz [PARAMETER|REQUIRED|Initial IMU position wrt inertial frame]</para>
</listitem><listitem><para>imu_linear_velocity_xyz [PARAMETER|REQUIRED|Initial IMU linear velocity wrt inertial frame, in a mixed-velocity representation]</para>
</listitem><listitem><para>l_contact_frame_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial left foot contact frame orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>l_contact_frame_position_xyz [PARAMETER|REQUIRED|Initial left foot contact frame position wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial right foot contact frame orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>r_contact_frame_position_xyz [PARAMETER|REQUIRED|Initial right foot contact frame position wrt inertial frame]</para>
</listitem><listitem><para>accelerometer_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial accelerometer bias expressed in IMU frame]</para>
</listitem><listitem><para>gyroscope_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial gyroscope bias expressed in IMU frame] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="320" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupPriorDevs</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupPriorDevs</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup initial state standard deviations. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the PriorsStdDev group are,<itemizedlist>
<listitem><para>imu_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial IMU orientation as wrt inertial frame]</para>
</listitem><listitem><para>imu_position [PARAMETER|REQUIRED|Initial IMU position deviation wrt inertial frame]</para>
</listitem><listitem><para>imu_linear_velocity [PARAMETER|REQUIRED|Initial IMU linear velocity deviation wrt inertial frame, in a mixed-velocity representation]</para>
</listitem><listitem><para>l_contact_frame_orientation_quaternion [PARAMETER|REQUIRED|Initial left foot contact frame orientation deviation wrt inertial frame]</para>
</listitem><listitem><para>l_contact_frame_position [PARAMETER|REQUIRED|Initial left foot contact frame position deviation wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_orientation_quaternion [PARAMETER|REQUIRED|Initial right foot contact frame orientation deviation wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_position [PARAMETER|REQUIRED|Initial right foot contact frame position deviation wrt inertial frame]</para>
</listitem><listitem><para>accelerometer_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial accelerometer bias devitaion expressed in IMU frame]</para>
</listitem><listitem><para>gyroscope_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial gyroscope bias deviation expressed in IMU frame] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="338" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a14bb55c740bab8b15a8a89dd28c40d5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupModelParams</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupModelParams</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup model related parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="370" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac59ec82239398f18c5fc5347bf8d979e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupFixedVectorParamPrivate</definition>
        <argsstring>(const std::string &amp;param, const std::string &amp;prefix, std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler, std::vector&lt; double &gt; &amp;vec)</argsstring>
        <name>setupFixedVectorParamPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Setup parameter vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>print prefix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="381" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4b30bd2271c3f84d936b6f2ea5e01a40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::updateBaseStateFromIMUState</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;state, const FloatingBaseEstimators::Measurements &amp;meas, iDynTree::Transform &amp;basePose, iDynTree::Twist &amp;baseTwist)</argsstring>
        <name>updateBaseStateFromIMUState</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>iDynTree::Transform &amp;</type>
          <declname>basePose</declname>
        </param>
        <param>
          <type>iDynTree::Twist &amp;</type>
          <declname>baseTwist</declname>
        </param>
        <briefdescription>
<para>Wrapper method for getting base state from internal IMU state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state of the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>previous measurement to the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">basePose</parametername>
</parameternamelist>
<parameterdescription>
<para>base pose as an iDynTree Transform object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baseTwist</parametername>
</parameternamelist>
<parameterdescription>
<para>mixe- trivialized base velocity as an iDynTree Twist object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="392" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" kindref="compound">FloatingBaseEstimator</ref> class contains the bare-bones implementation for a LeggedOdometry based or Extended Kalman Filter based floating base estimation algorithms for bipedal robots. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>it is assumed that if an IMU (primary) is specified in the inherited implementation, then this IMU is rigidly attached to the specified base link in the implementation </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Options</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Options"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_modelComp</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_meas</edgelabel>
          <edgelabel>m_measPrev</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_priors</edgelabel>
          <edgelabel>m_stateStdDev</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_estimatorOut</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_sensorsDev</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_state</edgelabel>
          <edgelabel>m_statePrev</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_options</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::StateStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev"/>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::InternalState</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Measurements</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements"/>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::SensorsStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev"/>
      </node>
      <node id="7">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Output</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output"/>
        <childnode refid="6" relation="usage">
          <edgelabel>stateStdDev</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator::ModelComputations</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="33" column="1" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="34" bodyend="396"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9109beb3315d981d80e8d817d7b56818" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a5ee4344d0fd1353e91c52ef15d8ff61d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8ed3453160e5ed65062ddf36700db336" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a73f6c5a571246a976c534dbf0c8485c9" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_dt</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a7a69586c1a993d3abc61c786d25b88c1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_estimatorOut</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a67d83d2880b0c9e7e279410081138bd7" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_estimatorState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a39e4591671b56359f28884caa4a0a5cf" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_meas</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a17e146652bf36d8a62bae4f217a26294" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_measPrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1e23695506ec5bd1b3bccc32fe2ac75a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_modelComp</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a620d1da852a07960e55a6dd8a53fd1a5" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_options</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a9a0355d4b8a11e747d2180c55cba64" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_priors</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a762098fd8fe1158f163209402db0d1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_sensorsDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6c98bb1f972363c0f1b795bdcd50f5fd" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac13379b400e3a5448370d62a60495c48" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_statePrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad3c4555ded287bb1450dd9b664705c7c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_stateStdDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aad3b0c5d6736bdc39e501833d6fd7dcf" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>modelComputations</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a26c64914587b18e5eaa2f8b8df321446" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>predictState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a529f9d8ec5ff8448a6ee853f03c99a90" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abbba797785c6492b25395122e4694432" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a776353b9fda2354f3f7eb0c80940ca49" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a2ccbfaf83d8eed0fe3b0b5ca46017ef4" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setIMUMeasurement</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad203e691ae8d7d8b41da86b2e081267b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac59ec82239398f18c5fc5347bf8d979e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupFixedVectorParamPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupInitialStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a14bb55c740bab8b15a8a89dd28c40d5d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupModelParams</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupOptions</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupPriorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupSensorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4b30bd2271c3f84d936b6f2ea5e01a40" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>updateBaseStateFromIMUState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abb02ba0cfa179ff2e2ede5a51894f079" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>updateKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ab24dc4ee5a3afb031812df139a3dbd09" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~FloatingBaseEstimator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
