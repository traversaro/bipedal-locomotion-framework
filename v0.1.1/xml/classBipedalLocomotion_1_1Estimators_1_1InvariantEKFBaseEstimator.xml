<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::FloatingBaseEstimator</basecompoundref>
    <includes local="no">BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1ab4b28f756d0202972b6943534d0a3f17" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="131" column="21" bodyfile="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a87ffffd28df33f28031a04f9d6e47990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::InvariantEKFBaseEstimator</definition>
        <argsstring>()</argsstring>
        <name>InvariantEKFBaseEstimator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="50" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1aa3b055aa205ec634f8114abe9940af73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::~InvariantEKFBaseEstimator</definition>
        <argsstring>()</argsstring>
        <name>~InvariantEKFBaseEstimator</name>
        <briefdescription>
<para>Destructor (necessary for PIMPL idiom) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a75d32f4d2f3545e5bda5ca59958cef73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::resetEstimator</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;newState, const FloatingBaseEstimators::StateStdDev &amp;newPriorDev)</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref> &amp;</type>
          <declname>newPriorDev</declname>
        </param>
        <briefdescription>
<para>Reset the base pose estimate and consequently the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newState</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state of the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newPriorDev</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state priors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a1fab62bab1fdbea2685515939e2463fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::resetEstimator</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;newState, const FloatingBaseEstimators::StateStdDev &amp;newPriorDev, const FloatingBaseEstimators::SensorsStdDev &amp;newSensorsDev)</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>newState</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref> &amp;</type>
          <declname>newPriorDev</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev" kindref="compound">FloatingBaseEstimators::SensorsStdDev</ref> &amp;</type>
          <declname>newSensorsDev</declname>
        </param>
        <briefdescription>
<para>Reset the base pose estimate and consequently the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newState</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state of the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newPriorDev</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state priors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newSensorsDev</parametername>
</parameternamelist>
<parameterdescription>
<para>sensor measurement noise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a55fe75746c6a20ed499f4346a0decaae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::toggleBiasEstimation</definition>
        <argsstring>(const bool &amp;flag)</argsstring>
        <name>toggleBiasEstimation</name>
        <param>
          <type>const bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Toggle bias estimation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for bias estimation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="90" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1af1720624f0378a9580e6beddef327894" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::toggleEKFUpdate</definition>
        <argsstring>(const bool &amp;flag)</argsstring>
        <name>toggleEKFUpdate</name>
        <param>
          <type>const bool &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Toggle EKF update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag for ekf update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="96" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a529f9d8ec5ff8448a6ee853f03c99a90" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="non-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;newState) final</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
<para>To prevent function hiding due to overloading of virtual methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1abbba797785c6492b25395122e4694432" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="non-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const Eigen::Quaterniond &amp;newBaseOrientation, const Eigen::Vector3d &amp;newBasePosition) final</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const Eigen::Quaterniond &amp;</type>
          <declname>newBaseOrientation</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>newBasePosition</declname>
        </param>
        <briefdescription>
<para>To prevent function hiding due to overloading of virtual methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="60" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a88d89de191ce004ad8fc1556f635f4d0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>customInitialization</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9">customInitialization</reimplements>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>These custom parameter specifications should be specified by the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="104" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a66a181d6038b6b61030bf51a86426afa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::predictState</definition>
        <argsstring>(const FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt) override</argsstring>
        <name>predictState</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a26c64914587b18e5eaa2f8b8df321446">predictState</reimplements>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Propagate the states through the prediction model, if there exists any (eg. </para>
        </briefdescription>
        <detaileddescription>
<para>a strap-down IMU model) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements passed as exogeneous inputs to the prediction model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state estimate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">P</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state covariance matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="114" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1afb7b1c76913f5166d0e4ce6641466d91" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::InvariantEKFBaseEstimator::updateKinematics</definition>
        <argsstring>(const FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt) override</argsstring>
        <name>updateKinematics</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abb02ba0cfa179ff2e2ede5a51894f079">updateKinematics</reimplements>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update the predicted state estimates using kinematics and contact measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements to update the predicted states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="123" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator" kindref="compound">InvariantEKFBaseEstimator</ref> class implements the Contact Aided Invariant EKF algorithm, developed by Ross Hartley, Maani Ghaffari, Ryan M. </para>
    </briefdescription>
    <detaileddescription>
<para>Eustice, Jessy W. Grizzle in the research article, &quot;Contact-Aided Invariant Extended Kalman Filtering for Robot State Estimation&quot; arXiv:1904.09251 [cs.RO] Please cite this paper, if using this implementation as well. Link to the paper (<ulink url="https://arxiv.org/abs/1904.09251">https://arxiv.org/abs/1904.09251</ulink>). For the original version of the filter implementation, please see <ulink url="https://github.com/RossHartley/invariant-ekf">https://github.com/RossHartley/invariant-ekf</ulink>.</para>
<para>This implementation is a reduced version of the algorithm used to estimate only the bipedal feet poses along with the base pose and IMU biases.</para>
<para>Usage:<itemizedlist>
<listitem><para>setup the estimator using the configuration paremeters related to<itemizedlist>
<listitem><para>Options group</para>
</listitem><listitem><para>SensorsStdDev group</para>
</listitem><listitem><para>InitialStates group</para>
</listitem><listitem><para>PriorsStdDev group (For details on these parameter configuration groups, plese see the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" kindref="compound">FloatingBaseEstimator</ref> class)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>set the measurments<itemizedlist>
<listitem><para>IMU measurements (accelerometer and gyroscope)</para>
</listitem><listitem><para>Kinematic measurements (joint positions and velocities)</para>
</listitem><listitem><para>Feet contact states (left foot contact state and right foot contact state)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>advance the filter to run the computation step</para>
</listitem><listitem><para>get estimator outputs </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Options</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Options"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_modelComp</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_meas</edgelabel>
          <edgelabel>m_measPrev</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_priors</edgelabel>
          <edgelabel>m_stateStdDev</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_estimatorOut</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_sensorsDev</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_state</edgelabel>
          <edgelabel>m_statePrev</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_options</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::StateStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::InternalState</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState"/>
      </node>
      <node id="6">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Measurements</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements"/>
      </node>
      <node id="10">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::SensorsStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Output</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output"/>
        <childnode refid="7" relation="usage">
          <edgelabel>stateStdDev</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator::ModelComputations</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" line="44" column="1" bodyfile="BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h" bodystart="45" bodyend="132"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a88d89de191ce004ad8fc1556f635f4d0" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9109beb3315d981d80e8d817d7b56818" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a5ee4344d0fd1353e91c52ef15d8ff61d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a87ffffd28df33f28031a04f9d6e47990" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>InvariantEKFBaseEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8ed3453160e5ed65062ddf36700db336" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a73f6c5a571246a976c534dbf0c8485c9" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_dt</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a7a69586c1a993d3abc61c786d25b88c1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_estimatorOut</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a67d83d2880b0c9e7e279410081138bd7" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_estimatorState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a39e4591671b56359f28884caa4a0a5cf" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_meas</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a17e146652bf36d8a62bae4f217a26294" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_measPrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1e23695506ec5bd1b3bccc32fe2ac75a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_modelComp</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a620d1da852a07960e55a6dd8a53fd1a5" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_options</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1ab4b28f756d0202972b6943534d0a3f17" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a9a0355d4b8a11e747d2180c55cba64" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_priors</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a762098fd8fe1158f163209402db0d1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_sensorsDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6c98bb1f972363c0f1b795bdcd50f5fd" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac13379b400e3a5448370d62a60495c48" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_statePrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad3c4555ded287bb1450dd9b664705c7c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>m_stateStdDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aad3b0c5d6736bdc39e501833d6fd7dcf" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>modelComputations</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a66a181d6038b6b61030bf51a86426afa" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>predictState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a75d32f4d2f3545e5bda5ca59958cef73" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a1fab62bab1fdbea2685515939e2463fb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a529f9d8ec5ff8448a6ee853f03c99a90" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1abbba797785c6492b25395122e4694432" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a529f9d8ec5ff8448a6ee853f03c99a90" prot="public" virt="virtual" ambiguityscope="BipedalLocomotion::Estimators::FloatingBaseEstimator::"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abbba797785c6492b25395122e4694432" prot="public" virt="virtual" ambiguityscope="BipedalLocomotion::Estimators::FloatingBaseEstimator::"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a776353b9fda2354f3f7eb0c80940ca49" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a2ccbfaf83d8eed0fe3b0b5ca46017ef4" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setIMUMeasurement</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad203e691ae8d7d8b41da86b2e081267b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setupInitialStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setupOptions</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setupPriorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>setupSensorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a55fe75746c6a20ed499f4346a0decaae" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>toggleBiasEstimation</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1af1720624f0378a9580e6beddef327894" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>toggleEKFUpdate</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1afb7b1c76913f5166d0e4ce6641466d91" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>updateKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ab24dc4ee5a3afb031812df139a3dbd09" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>~FloatingBaseEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1aa3b055aa205ec634f8114abe9940af73" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</scope><name>~InvariantEKFBaseEstimator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
