<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::SchmittTriggerDetector</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::ContactDetector</basecompoundref>
    <includes local="no">BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1aaa18a5afef42d1327f039f7256a3436b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Estimators::SchmittTriggerDetector::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="125" column="21" bodyfile="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a963ad2920bb5fb0eca5e83bc9a6198c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::SchmittTriggerDetector::SchmittTriggerDetector</definition>
        <argsstring>()</argsstring>
        <name>SchmittTriggerDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1ab3d8e44e79f765c674162377b3d6360c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::SchmittTriggerDetector::~SchmittTriggerDetector</definition>
        <argsstring>()</argsstring>
        <name>~SchmittTriggerDetector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a154ec1fb35f33e36f42aba999aec2a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::setTimedTriggerInput</definition>
        <argsstring>(const std::string &amp;contactName, const double &amp;time, const double &amp;triggerInput)</argsstring>
        <name>setTimedTriggerInput</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>triggerInput</declname>
        </param>
        <briefdescription>
<para>Set trigger input and time stamp for an existing SchmittTrigger unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>time of measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">force</parametername>
</parameternamelist>
<parameterdescription>
<para>contact force intensity (typically contact normal force) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1af9b3cd11f248612c5f4ac5254bd19a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::setTimedTriggerInputs</definition>
        <argsstring>(const std::unordered_map&lt; std::string, SchmittTriggerInput &gt; &amp;timedInputs)</argsstring>
        <name>setTimedTriggerInputs</name>
        <param>
          <type>const std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerInput" kindref="compound">SchmittTriggerInput</ref> &gt; &amp;</type>
          <declname>timedInputs</declname>
        </param>
        <briefdescription>
<para>Set trigger input and time stamp for existing units. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timedInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>container of timed trigger inputs, pair(first, second): (time, force) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>any unit names in the input container that does not already exist will be ignored </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a3b83eaefb49d180e7dcacf8a2fd9eb33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::addContact</definition>
        <argsstring>(const std::string &amp;contactName, const bool &amp;initialState, const SchmittTriggerParams &amp;params)</argsstring>
        <name>addContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>initialState</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerParams" kindref="compound">SchmittTriggerParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Add a contact whose contact state need to be tracked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial contact state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Schmitt Trigger parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this method does not reset the state and parameters if the contact already exists </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a71a28338fc51b6f2a4b5020e0ed92b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::addContact</definition>
        <argsstring>(const std::string &amp;contactName, const bool &amp;initialState, const SchmittTriggerParams &amp;params, const double &amp;time_now)</argsstring>
        <name>addContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>initialState</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerParams" kindref="compound">SchmittTriggerParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>time_now</declname>
        </param>
        <briefdescription>
<para>Add a contact whose contact state need to be tracked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial contact state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Schmitt Trigger parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_now</parametername>
</parameternamelist>
<parameterdescription>
<para>current time instant to initialize the Schmitt trigger timers </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this method does not reset the state and parameters if the contact already exists </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a964ed6645116022aa1ebad4f366d8f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::resetState</definition>
        <argsstring>(const std::string &amp;contactName, const bool &amp;state)</argsstring>
        <name>resetState</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Reset a contact&apos;s state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>contact state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if contact does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1adc5f30d6e79e714bb0f1497160fddb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::resetContact</definition>
        <argsstring>(const std::string &amp;contactName, const bool &amp;state, const SchmittTriggerParams &amp;params)</argsstring>
        <name>resetContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerParams" kindref="compound">SchmittTriggerParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Reset a contact&apos;s parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial contact state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Schmitt Trigger parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if contact does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1af235c48501b1546cf35dd8d12ffece2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::SchmittTriggerDetector::removeContact</definition>
        <argsstring>(const std::string &amp;contactName)</argsstring>
        <name>removeContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <briefdescription>
<para>Remove contact from the Detector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="105" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1abffa6c0ad02107a8740548ea4ce07850" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::SchmittTriggerDetector::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>customInitialization</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a71ccc022cfdd914ba5178a488b4aab08">customInitialization</reimplements>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>These custom parameter specifications should be specified by the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the detector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="112" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a567965bf4ef87820b3b5cfa340b4a322" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::SchmittTriggerDetector::updateContactStates</definition>
        <argsstring>() override</argsstring>
        <name>updateContactStates</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a4427d21309459cf7b5c1b80f6c459803">updateContactStates</reimplements>
        <briefdescription>
<para>Update contact states based on thresholding of contact normal forces and timing parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="118" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Schmitt Trigger thresholding based contact detector that maintains and updates the contact states for a prescribed set of contacts. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::Estimators::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::Estimators::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::Contacts::EstimatedContact</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>K</label>
      </node>
      <node id="12">
        <label>T</label>
      </node>
      <node id="10">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="5">
        <label>std::unordered_map&lt; std::string, BipedalLocomotion::Contacts::EstimatedContact &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; std::string, BipedalLocomotion::Contacts::EstimatedContact &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::Contacts::ContactBase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase"/>
        <childnode refid="8" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_contactStates</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="29" column="1" bodyfile="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" bodystart="30" bodyend="126"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a3b83eaefb49d180e7dcacf8a2fd9eb33" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>addContact</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a71a28338fc51b6f2a4b5020e0ed92b9f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>addContact</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a368fbc6a7fa9c9707e26389b76556e19" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1abffa6c0ad02107a8740548ea4ce07850" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ace77fadd74924bd91770cd5a85784a55" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a0684227e2e364e19c4f17f6079700dc0" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ae2682ecdeb7341249be97a6a86a7894e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a2d71eeee88a937759f9fc7fb7b50c2aa" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1afbd97515bbbc79855a2d08bb62f01a63" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1aae40f667ae998fd8bc544014eec8820e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>m_contactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a3152f0d5abcae374fb78214c75bf2e44" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>m_detectorState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1aaa18a5afef42d1327f039f7256a3436b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1af235c48501b1546cf35dd8d12ffece2a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>removeContact</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1adc5f30d6e79e714bb0f1497160fddb9c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>resetContact</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a74cb220af98a21028b75ccde6b3c669b" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>resetContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a964ed6645116022aa1ebad4f366d8f08" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>resetState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a963ad2920bb5fb0eca5e83bc9a6198c7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>SchmittTriggerDetector</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a154ec1fb35f33e36f42aba999aec2a76" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>setTimedTriggerInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1af9b3cd11f248612c5f4ac5254bd19a2d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>setTimedTriggerInputs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1ad8f5f3a902b0dcbde666d2163750bbb8" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1a567965bf4ef87820b3b5cfa340b4a322" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>updateContactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector_1a553f01f853020e92ed98242cb9e23b00" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>~ContactDetector</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector_1ab3d8e44e79f765c674162377b3d6360c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::SchmittTriggerDetector</scope><name>~SchmittTriggerDetector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
