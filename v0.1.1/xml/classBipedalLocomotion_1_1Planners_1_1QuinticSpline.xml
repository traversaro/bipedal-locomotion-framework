<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Planners::QuinticSpline</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; QuinticSplineState &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/Planners/QuinticSpline.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a72ec29aa17e68f08c9bb3de02c8ad941" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Planners::QuinticSpline::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Private implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="39" column="21" bodyfile="BipedalLocomotion/Planners/QuinticSpline.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a7c5da046de13a4c62daa918fe741dae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::QuinticSpline::QuinticSpline</definition>
        <argsstring>()</argsstring>
        <name>QuinticSpline</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a9baf5f5d4cb3b31a87367fa06c8c28aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::QuinticSpline::~QuinticSpline</definition>
        <argsstring>()</argsstring>
        <name>~QuinticSpline</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It is required by the PIMPL idiom. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a105ca567abca30688a2722f6f062bdba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::setAdvanceTimeStep</definition>
        <argsstring>(const double &amp;dt)</argsstring>
        <name>setAdvanceTimeStep</name>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Set the time step of the advance interface. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>if the the time step is not set the user cannot use the advance features. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>the time step of the advance block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1aba1cdaadf1952e4b43f94711fa3c68cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::setKnots</definition>
        <argsstring>(const std::vector&lt; Eigen::VectorXd &gt; &amp;position, const std::vector&lt; double &gt; &amp;time)</argsstring>
        <name>setKnots</name>
        <param>
          <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the knots of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the knots in $f\mathbb{R}^n$f. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>vector containing the time instant of the knots. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1abfdd332e0cf65e2d4b231663b938c5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::setInitialConditions</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; const Eigen::VectorXd &gt; acceleration)</argsstring>
        <name>setInitialConditions</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Set the initial condition of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>initial velocity (i.e. first derivative). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>initial acceleration (i.e. second derivative). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1afa680e10fef4fc43abab83bc92546009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::setFinalConditions</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; const Eigen::VectorXd &gt; acceleration)</argsstring>
        <name>setFinalConditions</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Set the final condition of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>final velocity (i.e. first derivative). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>final acceleration (i.e. second derivative). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1ae3ec3f6b124d26b9f43c87a9e47256f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::evaluatePoint</definition>
        <argsstring>(const double &amp;t, Eigen::Ref&lt; Eigen::VectorXd &gt; position, Eigen::Ref&lt; Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; Eigen::VectorXd &gt; acceleration)</argsstring>
        <name>evaluatePoint</name>
        <param>
          <type>const double &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Evaluate the spline at a given point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>instant time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position at time t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity at time t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration at time t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a038826cb0f15b2f4558d67104448136b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::evaluatePoint</definition>
        <argsstring>(const double &amp;t, QuinticSplineState &amp;state)</argsstring>
        <name>evaluatePoint</name>
        <param>
          <type>const double &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1Planners_1_1QuinticSplineState" kindref="compound">QuinticSplineState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Evaluate the spline at a given point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>instant time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>of the system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="106" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a2589a85bcd0a5b4ecf14b1a031f62cb3" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1QuinticSplineState" kindref="compound">QuinticSplineState</ref> &amp;</type>
        <definition>const QuinticSplineState&amp; BipedalLocomotion::Planners::QuinticSpline::get</definition>
        <argsstring>() const final</argsstring>
        <name>get</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ab0ecf6787eae22b06d9f9bfd8ed68184">get</reimplements>
        <briefdescription>
<para>Get the state of the system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>if the the time step of the advance is not set the user cannot use the advance features. </para>
</simplesect>
<simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="115" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a9901e8cad5325b70cfc9371007e016f8" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::isValid</definition>
        <argsstring>() const final</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae05561bcb6de140d2269b7ca490d711d">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a2589a85bcd0a5b4ecf14b1a031f62cb3" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>if the the time step of the advance is not set the user cannot use the advance features. </para>
</simplesect>
<simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="123" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1afaf364e18dc00d866aef74cf9aff1a19" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::QuinticSpline::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a766b2a1d75a733ec09016adf1cb75e10">advance</reimplements>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from <ref refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a2589a85bcd0a5b4ecf14b1a031f62cb3" kindref="member">get()</ref>. <simplesect kind="warning"><para>if the the time step of the advance is not set the user cannot use the advance features. </para>
</simplesect>
<simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="131" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Quintic spline implement a 5-th order polynomial spline in $f\mathbb{R}^n$f. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; QuinticSplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; QuinticSplineState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::QuinticSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; QuinticSplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; QuinticSplineState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::QuinticSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/QuinticSpline.h" line="33" column="1" bodyfile="BipedalLocomotion/Planners/QuinticSpline.h" bodystart="34" bodyend="133"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1afaf364e18dc00d866aef74cf9aff1a19" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1ae3ec3f6b124d26b9f43c87a9e47256f1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>evaluatePoint</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a038826cb0f15b2f4558d67104448136b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>evaluatePoint</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a2589a85bcd0a5b4ecf14b1a031f62cb3" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a9901e8cad5325b70cfc9371007e016f8" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a72ec29aa17e68f08c9bb3de02c8ad941" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a7c5da046de13a4c62daa918fe741dae3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>QuinticSpline</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a105ca567abca30688a2722f6f062bdba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>setAdvanceTimeStep</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1afa680e10fef4fc43abab83bc92546009" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>setFinalConditions</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1abfdd332e0cf65e2d4b231663b938c5cb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>setInitialConditions</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1aba1cdaadf1952e4b43f94711fa3c68cc" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>setKnots</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a9baf5f5d4cb3b31a87367fa06c8c28aa" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::QuinticSpline</scope><name>~QuinticSpline</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
