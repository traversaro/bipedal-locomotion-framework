<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Planners::SwingFootPlanner</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; SwingFootPlannerState &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/Planners/SwingFootPlanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a05f9acf196e6eb3d2065f348d168c54c" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Planners_1_1SwingFootPlannerState" kindref="compound">SwingFootPlannerState</ref></type>
        <definition>SwingFootPlannerState BipedalLocomotion::Planners::SwingFootPlanner::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
<para>State of the planner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="44" column="27" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ae2c06b88b13044beaacee788659fb384" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_dT</definition>
        <argsstring></argsstring>
        <name>m_dT</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Sampling time of the planner in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="46" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1acc50291a370a2c14e7c2422a004ac8ab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_currentTrajectoryTime</definition>
        <argsstring></argsstring>
        <name>m_currentTrajectoryTime</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Current time of the planner in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="47" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a7550c2e42f48a796f200c280e9179e89" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Planners_1_1ContactList" kindref="compound">ContactList</ref></type>
        <definition>ContactList BipedalLocomotion::Planners::SwingFootPlanner::m_contactList</definition>
        <argsstring></argsstring>
        <name>m_contactList</name>
        <briefdescription>
<para>List of the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="49" column="17" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ab2cf4e1ef7f4f63feedd191902442339" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Planners_1_1ContactList_1a34821395a6db64f1a03a60d66a74b25c" kindref="member">ContactList::const_iterator</ref></type>
        <definition>ContactList::const_iterator BipedalLocomotion::Planners::SwingFootPlanner::m_currentContactPtr</definition>
        <argsstring></argsstring>
        <name>m_currentContactPtr</name>
        <briefdescription>
<para>Pointer to the current contact. </para>
        </briefdescription>
        <detaileddescription>
<para>(internal use) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="50" column="33" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a74350935e4645a7c74479f7cb4429526" prot="private" static="no" mutable="no">
        <type><ref refid="SO3Planner_8h_1ae8bb8f4783a1e0e0c231333334c9675f" kindref="member">SO3PlannerInertial</ref></type>
        <definition>SO3PlannerInertial BipedalLocomotion::Planners::SwingFootPlanner::m_SO3Planner</definition>
        <argsstring></argsstring>
        <name>m_SO3Planner</name>
        <briefdescription>
<para>Trajectory planner in SO(3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="53" column="24" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a419127b1cec32bd0827b160f132cc122" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline" kindref="compound">QuinticSpline</ref></type>
        <definition>QuinticSpline BipedalLocomotion::Planners::SwingFootPlanner::m_planarPlanner</definition>
        <argsstring></argsstring>
        <name>m_planarPlanner</name>
        <briefdescription>
<para>Trajectory planner for the x y coordinates of the foot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="54" column="19" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aecf4110df14aac0f0cac596c6abac33f" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline" kindref="compound">QuinticSpline</ref></type>
        <definition>QuinticSpline BipedalLocomotion::Planners::SwingFootPlanner::m_heightPlanner</definition>
        <argsstring></argsstring>
        <name>m_heightPlanner</name>
        <briefdescription>
<para>Trajectory planner for the z coordinate of the foot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="55" column="19" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ad22ed48af0c25891c140707a2308c350" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_stepHeight</definition>
        <argsstring></argsstring>
        <name>m_stepHeight</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Height of the swing foot. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this value could not be the maximum height of the foot. If m_footApexTime is set to 0.5 the stepHeight is the maximum of the trajectory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="57" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a5a169917029284c391fb12021e22bb6a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_footApexTime</definition>
        <argsstring></argsstring>
        <name>m_footApexTime</name>
        <initializer>{0.5}</initializer>
        <briefdescription>
<para>Number between 0 and 1 representing the foot apex instant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="60" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a1731ba2669a608b2d5aa8228a7a73a7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::updateSE3Traj</definition>
        <argsstring>()</argsstring>
        <name>updateSE3Traj</name>
        <briefdescription>
<para>Update the SE3 Trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="66" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a7a5ff3aede4f87d39dca4bce7ab17944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::initialize</definition>
        <argsstring>(std::shared_ptr&lt; ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="6" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the planner in seconds   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>step_height</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Height of the swing foot. It is not the maximum height of the foot. If apex time is 0.5 <computeroutput>step_height</computeroutput> is the maximum   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_apex_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number between 0 and 1 representing the foot apex instant. If 0 the apex happens at take off if 1 at touch down   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_landing_velocity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Landing vertical velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_landing_acceleration</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Landing vertical acceleration   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8d4baca8af2e9f9beb867d7a7b2363f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Planners::SwingFootPlanner::setContactList</definition>
        <argsstring>(const ContactList &amp;contactList)</argsstring>
        <name>setContactList</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Planners_1_1ContactList" kindref="compound">ContactList</ref> &amp;</type>
          <declname>contactList</declname>
        </param>
        <briefdescription>
<para>Set the contact list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contactList</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the list fora given contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="88" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8b3a5420e2e35693d5c60590a0eeb358" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1SwingFootPlannerState" kindref="compound">SwingFootPlannerState</ref> &amp;</type>
        <definition>const SwingFootPlannerState&amp; BipedalLocomotion::Planners::SwingFootPlanner::get</definition>
        <argsstring>() const final</argsstring>
        <name>get</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ab0ecf6787eae22b06d9f9bfd8ed68184">get</reimplements>
        <briefdescription>
<para>Get the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="94" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aa01611b85fa067067a4bd30fc9ac58c7" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::isValid</definition>
        <argsstring>() const final</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae05561bcb6de140d2269b7ca490d711d">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8b3a5420e2e35693d5c60590a0eeb358" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="100" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a273fc940688dc888d1c3cb7ea3c8b6de" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a766b2a1d75a733ec09016adf1cb75e10">advance</reimplements>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from <ref refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8b3a5420e2e35693d5c60590a0eeb358" kindref="member">get()</ref>. <simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="106" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner" kindref="compound">SwingFootPlanner</ref> implement a minimum jerk trajectory planner for the swing foot. </para>
    </briefdescription>
    <detaileddescription>
<para>The planner is designed in SE(3) and we assume that initial 6d-acceleration and 6d-velocity of the foot is always equal to zero at take off. The trajectory of the foot will belong to the Geodesic. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="42" column="1" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="43" bodyend="107"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a273fc940688dc888d1c3cb7ea3c8b6de" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8b3a5420e2e35693d5c60590a0eeb358" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a7a5ff3aede4f87d39dca4bce7ab17944" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aa01611b85fa067067a4bd30fc9ac58c7" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a7550c2e42f48a796f200c280e9179e89" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_contactList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ab2cf4e1ef7f4f63feedd191902442339" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_currentContactPtr</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1acc50291a370a2c14e7c2422a004ac8ab" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_currentTrajectoryTime</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ae2c06b88b13044beaacee788659fb384" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_dT</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a5a169917029284c391fb12021e22bb6a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_footApexTime</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aecf4110df14aac0f0cac596c6abac33f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_heightPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a419127b1cec32bd0827b160f132cc122" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_planarPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a74350935e4645a7c74479f7cb4429526" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_SO3Planner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a05f9acf196e6eb3d2065f348d168c54c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ad22ed48af0c25891c140707a2308c350" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_stepHeight</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a8d4baca8af2e9f9beb867d7a7b2363f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>setContactList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a1731ba2669a608b2d5aa8228a7a73a7d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>updateSE3Traj</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
