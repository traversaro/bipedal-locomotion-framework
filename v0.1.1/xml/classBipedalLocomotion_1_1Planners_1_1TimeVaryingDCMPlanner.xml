<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner" prot="public" virt="non-virtual">BipedalLocomotion::Planners::DCMPlanner</basecompoundref>
    <includes local="no">BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a683d2b2957650558670e6bcdcffe7a15" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Planners::TimeVaryingDCMPlanner::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to private implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="31" column="21" bodyfile="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe4ed11bbdbaabd4acbeceeb9d2aa6ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::TimeVaryingDCMPlanner::TimeVaryingDCMPlanner</definition>
        <argsstring>()</argsstring>
        <name>TimeVaryingDCMPlanner</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afbef9d47aac1e766892fa8bef07ccdf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::TimeVaryingDCMPlanner::~TimeVaryingDCMPlanner</definition>
        <argsstring>()</argsstring>
        <name>~TimeVaryingDCMPlanner</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a889f0bbc53956811feecf5f2ca7ad5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::initialize</definition>
        <argsstring>(std::shared_ptr&lt; ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a64b7a1fb8998ff1b9e35606f78c254b2">initialize</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="10" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>linear_solver</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Linear solver used by ipopt, the default value is mumps. Please check <ulink url="https://coin-or.github.io/Ipopt/#PREREQUISITES">https://coin-or.github.io/Ipopt/#PREREQUISITES</ulink> for the available solvers   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>planner_sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the planner   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_foot_corners</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of the corner of the polygon used to describe the foot. E.g. 4   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_corner_&lt;i&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Vector3d</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>A 3d vector describing the position of the corner w.r.t. frame associated to the foot. <computeroutput>i = 0:number_of_foot_corners</computeroutput>.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>omega_dot_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the <formula id="41">$\dot{omega}$</formula>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dcm_tracking_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the DCM tracking   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>omega_dot_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of <formula id="41">$\dot{omega}$</formula>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>vrp_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of the VRP   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dcm_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of the DCM   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="61" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a7040188a5ec9589ddd5112c36f04e87f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::computeTrajectory</definition>
        <argsstring>() final</argsstring>
        <name>computeTrajectory</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1ab53cdcad13421f631a811dcdcae1126c">computeTrajectory</reimplements>
        <briefdescription>
<para>Compute the DCM trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="67" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3a1f3b59944da2a8b0bc204a16b42ab" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1DCMPlannerState" kindref="compound">DCMPlannerState</ref> &amp;</type>
        <definition>const DCMPlannerState&amp; BipedalLocomotion::Planners::TimeVaryingDCMPlanner::get</definition>
        <argsstring>() const final</argsstring>
        <name>get</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ab0ecf6787eae22b06d9f9bfd8ed68184">get</reimplements>
        <briefdescription>
<para>Get the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="73" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a2c9f154bf5a3bcade70623423dff7452" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::isValid</definition>
        <argsstring>() const final</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae05561bcb6de140d2269b7ca490d711d">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3a1f3b59944da2a8b0bc204a16b42ab" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="79" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad2935a4ff1c4e345a6e1b49dc5a3bfc6" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a766b2a1d75a733ec09016adf1cb75e10">advance</reimplements>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from <ref refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3a1f3b59944da2a8b0bc204a16b42ab" kindref="member">get()</ref>. <simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="85" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner" kindref="compound">DCMPlanner</ref> defines a trajectory generator for the variable height Divergent component of motion (DCM). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>T</label>
      </node>
      <node id="6">
        <label>std::shared_ptr&lt; T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_contactPhaseList</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_initialState</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Planners::DCMPlannerState</label>
        <link refid="structBipedalLocomotion_1_1Planners_1_1DCMPlannerState"/>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; const BipedalLocomotion::Planners::ContactPhaseList &gt;</label>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; const BipedalLocomotion::Planners::ContactPhaseList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; T &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="24" column="1" bodyfile="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" bodystart="25" bodyend="87"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad2935a4ff1c4e345a6e1b49dc5a3bfc6" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a7040188a5ec9589ddd5112c36f04e87f" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>computeTrajectory</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3a1f3b59944da2a8b0bc204a16b42ab" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a889f0bbc53956811feecf5f2ca7ad5b7" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a2c9f154bf5a3bcade70623423dff7452" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a916afbd796e7e1f84664cdec3c934e8a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_contactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1af1b8d72d4fe9eddc15fad125b4655c94" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_initialState</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a683d2b2957650558670e6bcdcffe7a15" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a0ef330e914694b578ad2a4562ec6ac9b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setContactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a291443113b24e1a7c18f6347d14cea87" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setInitialState</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe4ed11bbdbaabd4acbeceeb9d2aa6ad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>TimeVaryingDCMPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a4be34427ec06b98edcdd7ab62ab2728e" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~DCMPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afbef9d47aac1e766892fa8bef07ccdf1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~TimeVaryingDCMPlanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
