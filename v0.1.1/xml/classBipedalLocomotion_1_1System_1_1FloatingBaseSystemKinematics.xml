<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::System::FloatingBaseSystemKinematics</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem" prot="public" virt="non-virtual">BipedalLocomotion::System::DynamicalSystem&lt; std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Matrix&lt; double, 6, 1 &gt;, Eigen::VectorXd &gt; &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/System/FloatingBaseSystemKinematics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a6ed3ca64012c2c4b660ad58c168d90b1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::System::FloatingBaseSystemKinematics::m_rho</definition>
        <argsstring></argsstring>
        <name>m_rho</name>
        <initializer>{0.01}</initializer>
        <briefdescription>
<para>Regularization term used for the Baumgarte stabilization over the SO(3) group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" line="47" column="12" bodyfile="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a3b9b513156c3b1286a3a17da61f1042e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::FloatingBaseSystemKinematics::initalize</definition>
        <argsstring>(std::weak_ptr&lt; ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initalize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a14d1090e991a0e47d6b07ebcf4f4b9ed">initalize</reimplements>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the Dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Please call this function only if you want to set an arbitrary value for the parameter used in the Baumgarte stabilization <formula id="5">$\rho$</formula> (The default value is 0.01 ). In this case the handler should contain a key called rho. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a8e67241e11e1118692322dec3d4cddf4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::FloatingBaseSystemKinematics::dynamics</definition>
        <argsstring>(const double &amp;time, StateDerivativeType &amp;stateDerivative) final</argsstring>
        <name>dynamics</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a45ed4feaae08b70c3b339e96dc430b4b">dynamics</reimplements>
        <param>
          <type>const double &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1abb224eea8e2657778281b828ca49963d" kindref="member">StateDerivativeType</ref> &amp;</type>
          <declname>stateDerivative</declname>
        </param>
        <briefdescription>
<para>Computes the floating based system dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para>It return <formula id="1">$f(x, u, t)$</formula>. <simplesect kind="note"><para>The control input and the state have to be set separately with the methods setControlInput and setState. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time at witch the dynamics is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateDynamics</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple containing a reference to the element of the state derivative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a34422794bd8f790893f2cf3242a2a9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::System::FloatingBaseSystemKinematics::~FloatingBaseSystemKinematics</definition>
        <argsstring>()=default</argsstring>
        <name>~FloatingBaseSystemKinematics</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" line="74" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics" kindref="compound">FloatingBaseSystemKinematics</ref> describes a floating base system kinematics. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics" kindref="compound">FloatingBaseSystemKinematics</ref> inherits from a generic <ref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem" kindref="compound">DynamicalSystem</ref> where:<itemizedlist>
<listitem><para><ref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a3bdeb525e98cbaf9e591a1f1ef70f5b5" kindref="member">DynamicalSystem::StateType</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector6d: position of the base w.r.t. the inertial frame</para>
</listitem><listitem><para>Eigen::Matrix3d: rotation matrix <formula id="2">${} ^ I R _ {b}$</formula>. Matrix that transform a vector whose coordinates are expressed in the base frame in the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint positions [in rad].</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1abb224eea8e2657778281b828ca49963d" kindref="member">DynamicalSystem::StateDerivativeType</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector6d: base velocity w.r.t. the inertial frame;</para>
</listitem><listitem><para>Eigen::Matrix3d: rate of change of the rotation matrix <formula id="3">${} ^ I \dot{R} _ {b}$</formula>. whose coordinates are expressed in the base frame in the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint velocities [in rad/s].</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a5f3d71fe4625e3f1b04900ea2e5207e7" kindref="member">DynamicalSystem::InputType</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector6d: base twist w.r.t. the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint velocities [in rad/s]. </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::DynamicalSystem&lt; std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Matrix&lt; double, 6, 1 &gt;, Eigen::VectorXd &gt; &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Matrix&lt; double, 6, 1 &gt;, Eigen::VectorXd &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::DynamicalSystem&lt; State, StateDerivative, Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::FloatingBaseSystemKinematics</label>
        <link refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::DynamicalSystem&lt; std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Matrix&lt; double, 6, 1 &gt;, Eigen::VectorXd &gt; &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Vector3d, Eigen::Matrix3d, Eigen::VectorXd &gt;, std::tuple&lt; Eigen::Matrix&lt; double, 6, 1 &gt;, Eigen::VectorXd &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::DynamicalSystem&lt; State, StateDerivative, Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::FloatingBaseSystemKinematics</label>
        <link refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" line="42" column="1" bodyfile="BipedalLocomotion/System/FloatingBaseSystemKinematics.h" bodystart="46" bodyend="75"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a8e67241e11e1118692322dec3d4cddf4" prot="public" virt="virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>dynamics</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a6160d2d44798a3eec39cfce1b655ded6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>getState</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a3b9b513156c3b1286a3a17da61f1042e" prot="public" virt="virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>initalize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a5f3d71fe4625e3f1b04900ea2e5207e7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>InputType</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1ace598fd4976439d0de2267f20f3402c8" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>m_controlInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a6ed3ca64012c2c4b660ad58c168d90b1" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>m_rho</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a735e7ce5ce74a90e5584c887b6530ddd" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a34a150c0cc250490604aac970811483f" prot="public" virt="virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>setControlInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a526bdef9b5aa4f5117d782e005c967b7" prot="public" virt="virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1abb224eea8e2657778281b828ca49963d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>StateDerivativeType</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a3bdeb525e98cbaf9e591a1f1ef70f5b5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>StateType</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1DynamicalSystem_1a78d7fbb00a96d481d9a926b33f288d3b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>~DynamicalSystem</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1FloatingBaseSystemKinematics_1a34422794bd8f790893f2cf3242a2a9b1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::FloatingBaseSystemKinematics</scope><name>~FloatingBaseSystemKinematics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
