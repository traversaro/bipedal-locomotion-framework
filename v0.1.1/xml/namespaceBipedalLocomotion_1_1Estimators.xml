<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceBipedalLocomotion_1_1Estimators" kind="namespace" language="C++">
    <compoundname>BipedalLocomotion::Estimators</compoundname>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1ContactDetector" prot="public">BipedalLocomotion::Estimators::ContactDetector</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerDetector" prot="public">BipedalLocomotion::Estimators::SchmittTriggerDetector</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerParams" prot="public">BipedalLocomotion::Estimators::SchmittTriggerParams</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Estimators_1_1SchmittTriggerInput" prot="public">BipedalLocomotion::Estimators::SchmittTriggerInput</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1SchmittTriggerUnit" prot="public">BipedalLocomotion::Estimators::SchmittTriggerUnit</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquareState" prot="public">BipedalLocomotion::Estimators::RecursiveLeastSquareState</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare" prot="public">BipedalLocomotion::Estimators::RecursiveLeastSquare</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" prot="public">BipedalLocomotion::Estimators::FloatingBaseEstimator</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator" prot="public">BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</innerclass>
    <innernamespace refid="namespaceBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators">BipedalLocomotion::Estimators::FloatingBaseEstimators</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ContactDetector_8h_1a5e59ede0df7070d0c5763122e7708c6c" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">BipedalLocomotion::Contacts::EstimatedContact</ref> &gt;</type>
        <definition>using BipedalLocomotion::Estimators::EstimatedContactList = typedef std::unordered_map&lt;std::string, BipedalLocomotion::Contacts::EstimatedContact&gt;</definition>
        <argsstring></argsstring>
        <name>EstimatedContactList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="23" column="1" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="20" column="1"/>
  </compounddef>
</doxygen>
