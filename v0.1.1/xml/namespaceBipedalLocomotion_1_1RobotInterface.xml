<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceBipedalLocomotion_1_1RobotInterface" kind="namespace" language="C++">
    <compoundname>BipedalLocomotion::RobotInterface</compoundname>
    <innerclass refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" prot="public">BipedalLocomotion::RobotInterface::PolyDriverDescriptor</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpRobotControl" prot="public">BipedalLocomotion::RobotInterface::YarpRobotControl</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge" prot="public">BipedalLocomotion::RobotInterface::YarpSensorBridge</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1RobotInterface_1_1IRobotControl" prot="public">BipedalLocomotion::RobotInterface::IRobotControl</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1RobotInterface_1_1SensorBridgeOptions" prot="public">BipedalLocomotion::RobotInterface::SensorBridgeOptions</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1RobotInterface_1_1SensorLists" prot="public">BipedalLocomotion::RobotInterface::SensorLists</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1RobotInterface_1_1SensorBridgeMetaData" prot="public">BipedalLocomotion::RobotInterface::SensorBridgeMetaData</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1RobotInterface_1_1ISensorBridge" prot="public">BipedalLocomotion::RobotInterface::ISensorBridge</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="YarpHelper_8h_1a4d8ce7de2788fe1398fb5988c3d77744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref></type>
        <definition>PolyDriverDescriptor BipedalLocomotion::RobotInterface::constructRemoteControlBoardRemapper</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>constructRemoteControlBoardRemapper</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Helper function that can be used to build a RemoteControlBoardRemapper device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a parameter handler interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the function <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>joints_list</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;string&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>List of the controlled joints   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>remote_control_boards</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;string&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>List of the remote control boards associated to the joints   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the robot   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>local_prefix</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Prefix of the local port (e.g. the application name)   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>A <ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref>. If one of the parameters is missing an invalid <ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref> is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotInterface/YarpHelper.h" line="64" column="22" declfile="BipedalLocomotion/RobotInterface/YarpHelper.h" declline="64" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="YarpHelper_8h_1a9c135e684813536bf24d091cd60456a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref></type>
        <definition>PolyDriverDescriptor BipedalLocomotion::RobotInterface::constructGenericSensorClient</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>constructGenericSensorClient</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Helper function that can be used to build a GenericSensorClient device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a parameter handler interface. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the function <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>description</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Description of the genericSensorClient. It is the device name   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>remote_port_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the port associate to the remote   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>local_prefix</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Prefix of the local port (e.g. the application name)   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>local_port_name_suffix</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Suffix of the local port. The local port name is <computeroutput>/&lt;local_prefix&gt;&lt;local_port_name_suffix&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="note"><para>The genericSensorClient device is implement in <ulink url="https://github.com/robotology/whole-body-estimators/tree/cc8ffb83375a2d410b225f4fa67aee4a29074b42/devices/genericSensorClient">whole-body-estimators</ulink>. </para>
</simplesect>
<simplesect kind="return"><para>A <ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref>. If one of the parameters is missing an invalid <ref refid="structBipedalLocomotion_1_1RobotInterface_1_1PolyDriverDescriptor" kindref="compound">PolyDriverDescriptor</ref> is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotInterface/YarpHelper.h" line="80" column="22" declfile="BipedalLocomotion/RobotInterface/YarpHelper.h" declline="80" declcolumn="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/RobotInterface/YarpHelper.h" line="22" column="1"/>
  </compounddef>
</doxygen>
