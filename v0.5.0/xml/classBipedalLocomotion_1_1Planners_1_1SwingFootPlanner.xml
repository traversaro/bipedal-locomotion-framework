<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Planners::SwingFootPlanner</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/Planners/SwingFootPlanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a05f9acf196e6eb3d2065f348d168c54c" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Planners_1_1SwingFootPlannerState" kindref="compound">SwingFootPlannerState</ref></type>
        <definition>SwingFootPlannerState BipedalLocomotion::Planners::SwingFootPlanner::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
<para>State of the planner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="44" column="27" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ae2c06b88b13044beaacee788659fb384" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_dT</definition>
        <argsstring></argsstring>
        <name>m_dT</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Sampling time of the planner in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="46" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1acc50291a370a2c14e7c2422a004ac8ab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_currentTrajectoryTime</definition>
        <argsstring></argsstring>
        <name>m_currentTrajectoryTime</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Current time of the planner in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="47" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a11f2f1f64a11a1e80c1e37d8fda93e64" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactList" kindref="compound">Contacts::ContactList</ref></type>
        <definition>Contacts::ContactList BipedalLocomotion::Planners::SwingFootPlanner::m_contactList</definition>
        <argsstring></argsstring>
        <name>m_contactList</name>
        <briefdescription>
<para>List of the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="49" column="27" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1abbe64bad1f881b30483dfe2c880a0465" prot="private" static="no" mutable="no">
        <type>Contacts::ContactList::const_iterator</type>
        <definition>Contacts::ContactList::const_iterator BipedalLocomotion::Planners::SwingFootPlanner::m_currentContactPtr</definition>
        <argsstring></argsstring>
        <name>m_currentContactPtr</name>
        <briefdescription>
<para>Pointer to the current contact. </para>
        </briefdescription>
        <detaileddescription>
<para>(internal use) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="50" column="43" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a74350935e4645a7c74479f7cb4429526" prot="private" static="no" mutable="no">
        <type><ref refid="SO3Planner_8h_1ae8bb8f4783a1e0e0c231333334c9675f" kindref="member">SO3PlannerInertial</ref></type>
        <definition>SO3PlannerInertial BipedalLocomotion::Planners::SwingFootPlanner::m_SO3Planner</definition>
        <argsstring></argsstring>
        <name>m_SO3Planner</name>
        <briefdescription>
<para>Trajectory planner in SO(3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="53" column="24" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a23846c39d1f958e505203548f3a4308e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classBipedalLocomotion_1_1Planners_1_1Spline" kindref="compound">Spline</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Spline&gt; BipedalLocomotion::Planners::SwingFootPlanner::m_planarPlanner</definition>
        <argsstring></argsstring>
        <name>m_planarPlanner</name>
        <briefdescription>
<para>Trajectory planner for the x y coordinates of the foot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="54" column="21" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a45a257e2358aaa3bbe6c02a993d3ea85" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classBipedalLocomotion_1_1Planners_1_1Spline" kindref="compound">Spline</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Spline&gt; BipedalLocomotion::Planners::SwingFootPlanner::m_heightPlanner</definition>
        <argsstring></argsstring>
        <name>m_heightPlanner</name>
        <briefdescription>
<para>Trajectory planner for the z coordinate of the foot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="56" column="21" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ad22ed48af0c25891c140707a2308c350" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_stepHeight</definition>
        <argsstring></argsstring>
        <name>m_stepHeight</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Height of the swing foot. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this value could not be the maximum height of the foot. If m_footApexTime is set to 0.5 the stepHeight is the maximum of the trajectory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="59" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a5a169917029284c391fb12021e22bb6a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Planners::SwingFootPlanner::m_footApexTime</definition>
        <argsstring></argsstring>
        <name>m_footApexTime</name>
        <initializer>{0.5}</initializer>
        <briefdescription>
<para>Number between 0 and 1 representing the foot apex instant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="62" column="12" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a1731ba2669a608b2d5aa8228a7a73a7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::updateSE3Traj</definition>
        <argsstring>()</argsstring>
        <name>updateSE3Traj</name>
        <briefdescription>
<para>Update the SE3 Trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="68" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aee5c47374eb365a445abf15300ecaea6" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) final</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="9" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the planner in seconds   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>step_height</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Height of the swing foot. It is not the maximum height of the foot. If apex time is 0.5 <computeroutput>step_height</computeroutput> is the maximum   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_apex_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number between 0 and 1 representing the foot apex instant. If 0 the apex happens at take off if 1 at touch down   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_landing_velocity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Landing vertical velocity (default value 0.0)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_landing_acceleration</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Landing vertical acceleration (default value 0.0)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_take_off_velocity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Take-off vertical velocity (default value 0.0)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_take_off_acceleration</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Take-off vertical acceleration (default value 0.0)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>interpolation_method</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Define the interpolation method for the trajectory of the position. Accepted parameters: <computeroutput>min_acceleration</computeroutput>, <computeroutput>min_jerk</computeroutput> (default value <computeroutput>min_acceleration</computeroutput>)   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ab0702a02ddf314accd88d2a143583ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Planners::SwingFootPlanner::setContactList</definition>
        <argsstring>(const Contacts::ContactList &amp;contactList)</argsstring>
        <name>setContactList</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactList" kindref="compound">Contacts::ContactList</ref> &amp;</type>
          <declname>contactList</declname>
        </param>
        <briefdescription>
<para>Set the contact list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contactList</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the list fora given contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a3495995d4e48df8f65648538f4b1ae88" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1SwingFootPlannerState" kindref="compound">SwingFootPlannerState</ref> &amp;</type>
        <definition>const SwingFootPlannerState&amp; BipedalLocomotion::Planners::SwingFootPlanner::getOutput</definition>
        <argsstring>() const final</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1acb7101ba6041f23f41c8e57bac66bcf3">getOutput</reimplements>
        <briefdescription>
<para>Get the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="99" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1af9b02eaefe72c8800c50e061a5ea0d87" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::isOutputValid</definition>
        <argsstring>() const final</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a8c610311fc29bbf2ef6cde6a979630c9">isOutputValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with get() </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="105" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a273fc940688dc888d1c3cb7ea3c8b6de" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::SwingFootPlanner::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from get(). <simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="111" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner" kindref="compound">SwingFootPlanner</ref> implement a minimum jerk trajectory planner for the swing foot. </para>
    </briefdescription>
    <detaileddescription>
<para>The planner is designed in SE(3) and we assume that initial 6d-acceleration and 6d-velocity of the foot is always equal to zero at take off. The trajectory of the foot will belong to the Geodesic. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/SwingFootPlanner.h" line="42" column="1" bodyfile="BipedalLocomotion/Planners/SwingFootPlanner.h" bodystart="43" bodyend="112"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a273fc940688dc888d1c3cb7ea3c8b6de" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ad4907077d2d2c080166f621c1277560f" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a3495995d4e48df8f65648538f4b1ae88" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aee5c47374eb365a445abf15300ecaea6" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a83437d70b7000c155686ca51f7472888" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1af9b02eaefe72c8800c50e061a5ea0d87" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a11f2f1f64a11a1e80c1e37d8fda93e64" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_contactList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1abbe64bad1f881b30483dfe2c880a0465" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_currentContactPtr</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1acc50291a370a2c14e7c2422a004ac8ab" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_currentTrajectoryTime</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ae2c06b88b13044beaacee788659fb384" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_dT</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a5a169917029284c391fb12021e22bb6a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_footApexTime</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a45a257e2358aaa3bbe6c02a993d3ea85" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_heightPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a23846c39d1f958e505203548f3a4308e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_planarPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a74350935e4645a7c74479f7cb4429526" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_SO3Planner</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a05f9acf196e6eb3d2065f348d168c54c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ad22ed48af0c25891c140707a2308c350" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>m_stepHeight</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1af236fbc2dadf10f381326a70934e513f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1ab0702a02ddf314accd88d2a143583ab3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>setContactList</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac6f4790829906750f4ed6d87c5776d73" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a1731ba2669a608b2d5aa8228a7a73a7d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>updateSE3Traj</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::SwingFootPlanner</scope><name>~Advanceable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
