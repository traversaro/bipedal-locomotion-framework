<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1Advanceable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BipedalLocomotion::System::Advanceable</compoundname>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; RecursiveLeastSquareState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SensorBridgeMetaData &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SplineState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SO3PlannerState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; ArucoDetectorOutput &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; DCMPlannerState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; _State &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</derivedcompoundref>
    <includes local="no">BipedalLocomotion/System/Advanceable.h</includes>
    <templateparamlist>
      <param>
        <type>class _Input</type>
      </param>
      <param>
        <type>class _Output</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1Advanceable_1a83437d70b7000c155686ca51f7472888" prot="public" static="no">
        <type>_Input</type>
        <definition>using BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::Input =  _Input</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="36" column="5" bodyfile="BipedalLocomotion/System/Advanceable.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1Advanceable_1af236fbc2dadf10f381326a70934e513f" prot="public" static="no">
        <type>_Output</type>
        <definition>using BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::Output =  _Output</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="37" column="5" bodyfile="BipedalLocomotion/System/Advanceable.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::~Advanceable</definition>
        <argsstring>()=default</argsstring>
        <name>~Advanceable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="39" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1a5a8a2f85e818f4426566853ed1e23999">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1aee5c47374eb365a445abf15300ecaea6">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1a39a23630c63ebb2b148f355627f826c9">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a489846dc2acb563a641e4098d5bc8457">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a699553512ac3d76602d9c771f265a2a3">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1a6e3605df43a7cb6f01807e9cffec0b6c">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a0eb48afbadf1bf3c8d48cec0e8b006ca">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1a3f20d7efd3ca091711a9811e12bb8aed">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1ab1a46178a467229bd0dff042c206eaa9">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1afd8a4a3f3823189efaee3def7fdfd86f">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae1aca3a936b802b5c90717a5c1a3f53f">initialize</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a0bb457e9ead4d3c7d62aab47457de1f8">initialize</reimplementedby>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the advanceable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the default implementation does nothing. </para>
</simplesect>
<simplesect kind="return"><para>True if the initialization is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="46" column="18" bodyfile="BipedalLocomotion/System/Advanceable.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1acb7101ba6041f23f41c8e57bac66bcf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const Output &amp;</type>
        <definition>virtual const Output&amp; BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::getOutput</definition>
        <argsstring>() const =0</argsstring>
        <name>getOutput</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af11bae01dd074ff9e2d4ebdfcc7edd88">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a8560d01b521beb3e1564071d05bf9f8e">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aecc991f84626ed5114483a3e7c0fd78c">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1ae4891a46aa7b4fe04e03f2e94c9d34e8">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a002da0f215ba10ca204e84de2e1080de">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a4c1563c14094002279156a834fa1bc8b">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a9e1bc5e248e0f83cddae20277200ca12">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a9e1bc5e248e0f83cddae20277200ca12">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a3495995d4e48df8f65648538f4b1ae88">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad4e7aa0da4b67123771a8155611fbe64">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1a92beedaec20313db5623cca3f9b630fd">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1a5413119cdc59bf3418e488057b539974">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1Sink_1a4f83834c9269c31074e5a7e35ddb5f99">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ac5914a6768674100165630736548341d">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1ac3382473c18f86c151e40e567b048b68">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1ae052b356eb6471e8ef93385285b017e4">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a483e2dca295dd4dad89f0c268c4afeaa">getOutput</reimplementedby>
        <briefdescription>
<para>Get the output of the advanceable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="52" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1ac6f4790829906750f4ed6d87c5776d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::setInput</definition>
        <argsstring>(const Input &amp;input)=0</argsstring>
        <name>setInput</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a885f789466ad422baddcfa2996c23eca">setInput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce">setInput</reimplementedby>
        <param>
          <type>const Input &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input of the <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable" kindref="compound">Advanceable</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the input of the <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable" kindref="compound">Advanceable</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1a8c610311fc29bbf2ef6cde6a979630c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::isOutputValid</definition>
        <argsstring>() const =0</argsstring>
        <name>isOutputValid</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1add50895455a7713e665da0c93b027c12">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a7d9bea401a1490a1c3074773a7d0f31a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a0baf4a4877c4c790c35be575f63ea2d2">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1a733a50a2bdc34dbd0ee708e04d7fb2bb">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1ac09c1790195dc45acfb5838072e8d6e7">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1aade486dcd2cb26b789d0ef5fa8020b7a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1acdf5026823d28b0bec14badad5617599">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1acdf5026823d28b0bec14badad5617599">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1af9b02eaefe72c8800c50e061a5ea0d87">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3452250d0c1ff2c505e160837cdebc9">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1a4037cd65a12b285a8fd2cc3d2db443c8">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1a331d69e7059d2622ccb84ff4f2246d37">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1Sink_1a6228f114c0fc428501649d4c13ae5cb8">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a4abb7565bb83ed84cdf1072d27db171c">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1a82818a7d4b208780d7ae1fb03b7bb38a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1ab9fb291db0662a9d7760171fdcdcf44d">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae1312f6965a91d4b2472c30ff95c4e5c">isOutputValid</reimplementedby>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable_1acb7101ba6041f23f41c8e57bac66bcf3" kindref="member">getOutput()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="65" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;::advance</definition>
        <argsstring>()=0</argsstring>
        <name>advance</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a8600d27b4fd25ef5a19642c90da16008">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a24cd1a3554e663f9745152f1aa7f3360">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1a02ffb159f04eddb8e4d6c99888b31c74">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a1129d62c0563b8c6b522d4dbc670de1d">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1afaf364e18dc00d866aef74cf9aff1a19">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a557793850f4ed78b59238328566f1c57">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a557793850f4ed78b59238328566f1c57">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a273fc940688dc888d1c3cb7ea3c8b6de">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad2935a4ff1c4e345a6e1b49dc5a3bfc6">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1aad1e2cb1e5594bd5a7cddeec3f1b3054">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1a6e2de7b972ea706c244a9e30dbc201ad">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a857ecad479baac775759f91b286069c3">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1a7e89856750429fa6bc97d34845a1f153">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1a5c048c41c659d89f133aaa159971b1f0">advance</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1abc2defe1e3f95380a2788ffaec767ba1">advance</reimplementedby>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable_1acb7101ba6041f23f41c8e57bac66bcf3" kindref="member">getOutput()</ref>. <simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="71" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Advanceable_1ad4907077d2d2c080166f621c1277560f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::Advanceable&lt; Input, Output &gt;::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>Close the <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable" kindref="compound">Advanceable</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the default implementation does nothing. </para>
</simplesect>
<simplesect kind="return"><para>True if the close is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Advanceable.h" line="78" column="18" bodyfile="BipedalLocomotion/System/Advanceable.h" bodystart="86" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic class that represents a discrete system. </para>
    </briefdescription>
    <detaileddescription>
<para>The interface contains method to set inputs and output. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>BipedalLocomotion::IK::IntegrationBasedIK</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1IntegrationBasedIK"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>BipedalLocomotion::System::Advanceable&lt; Input, EmptySignal &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Input, EmptySignal &gt;</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>BipedalLocomotion::SimplifiedModelControllers::CoMZMPController</label>
        <link refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>BipedalLocomotion::Contacts::FixedFootDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::RobotInterface::YarpSensorBridge</label>
        <link refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>BipedalLocomotion::Perception::ArucoDetector</label>
        <link refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>BipedalLocomotion::TSID::QPTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPTSID"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>BipedalLocomotion::System::Advanceable&lt; UnicyclePlannerInput, UnicyclePlannerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; UnicyclePlannerInput, UnicyclePlannerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Planners::QuinticSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; RecursiveLeastSquareState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; RecursiveLeastSquareState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; TSIDLinearTask, TSIDState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; TSIDLinearTask, TSIDState &gt;</edgelabel>
        </childnode>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>BipedalLocomotion::System::Source&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Source&lt; SensorBridgeMetaData &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; SensorBridgeMetaData &gt;</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>BipedalLocomotion::System::Sink&lt; Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Sink"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Planners::CubicSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>BipedalLocomotion::Planners::UnicyclePlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>BipedalLocomotion::Estimators::LeggedOdometry</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>BipedalLocomotion::Planners::SO3Planner&lt; trivialization &gt;</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>BipedalLocomotion::System::Advanceable&lt; CoMZMPControllerInput, CoMZMPControllerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; CoMZMPControllerInput, CoMZMPControllerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>BipedalLocomotion::Contacts::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::Planners::Spline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1Spline"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>BipedalLocomotion::IK::QPInverseKinematics</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::Estimators::RecursiveLeastSquare</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>BipedalLocomotion::System::Source&lt; ArucoDetectorOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; ArucoDetectorOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; SplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; SplineState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion::Planners::SO3Planner&lt; LieGroupTrivialization::Right &gt;</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; LieGroupTrivialization::Right &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>BipedalLocomotion::System::Source&lt; _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; _State &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; _Task, _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>BipedalLocomotion::TSID::QPFixedBaseTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; IKLinearTask, IntegrationBasedIKState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; IKLinearTask, IntegrationBasedIKState &gt;</edgelabel>
        </childnode>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>BipedalLocomotion::TSID::TaskSpaceInverseDynamics</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1TaskSpaceInverseDynamics"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::System::Source&lt; SO3PlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="template-instance">
          <edgelabel>&lt; SO3PlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
      </node>
    </inheritancegraph>
    <location file="BipedalLocomotion/System/Advanceable.h" line="33" column="14" bodyfile="BipedalLocomotion/System/Advanceable.h" bodystart="34" bodyend="79"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ad4907077d2d2c080166f621c1277560f" prot="public" virt="virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1acb7101ba6041f23f41c8e57bac66bcf3" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77" prot="public" virt="virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a83437d70b7000c155686ca51f7472888" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a8c610311fc29bbf2ef6cde6a979630c9" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1af236fbc2dadf10f381326a70934e513f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac6f4790829906750f4ed6d87c5776d73" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::System::Advanceable</scope><name>~Advanceable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
