<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ManifConversions_8h" kind="file" language="C++">
    <compoundname>ManifConversions.h</compoundname>
    <includes local="no">iDynTree/Core/Transform.h</includes>
    <includes local="no">iDynTree/Core/EigenHelpers.h</includes>
    <includes local="no">manif/manif.h</includes>
    <incdepgraph>
      <node id="3">
        <label>iDynTree/Core/EigenHelpers.h</label>
      </node>
      <node id="4">
        <label>manif/manif.h</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion/Conversions/ManifConversions.h</label>
        <link refid="ManifConversions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree/Core/Transform.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1Conversions">BipedalLocomotion::Conversions</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="ManifConversions_8h_1a6eca022cc68f31749418d297b83d67ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>manif::SE3&lt; Scalar &gt;</type>
        <definition>manif::SE3&lt;Scalar&gt; BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;rotation, const Eigen::Matrix&lt; Scalar, 3, 1 &gt; &amp;translation)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 1 &gt; &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix and translation vector to manif SE3 object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to 3x3 Eigen matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference of 3x1 Eigen matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3 object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="28" column="16" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a0a64a78d62562574dd0466585928371e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SE3d</type>
        <definition>manif::SE3d BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Matrix3d &gt; rotation, Eigen::Ref&lt; const Eigen::Vector3d &gt; translation)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Matrix3d &gt;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix and translation vector to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x3 rotation matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x1 translation vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="43" column="24" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1ac71646fdf92888d3f6897ae090ce0a9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SE3d</type>
        <definition>manif::SE3d BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(const iDynTree::Transform &amp;H)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>const iDynTree::Transform &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>Convert iDynTree transform object to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to iDynTree Tranform object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="57" column="24" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1af56866b8b1ef81c3e00c5b53939386d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>manif::SO3&lt; Scalar &gt;</type>
        <definition>manif::SO3&lt;Scalar&gt; BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;rotation)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix to manif SO3 object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to 3x3 Eigen matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3 object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="70" column="16" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a2b82cd2819e93a949cdf1afb56555565" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SO3d</type>
        <definition>manif::SO3d BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Matrix3d &gt; rotation)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Matrix3d &gt;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix to manif SO3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x3 rotation matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x1 translation vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="84" column="24" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1aa3cbc74d297378895e4686cd4f8f3b3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SO3d</type>
        <definition>manif::SO3d BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(const iDynTree::Rotation &amp;R)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>const iDynTree::Rotation &amp;</type>
          <declname>R</declname>
        </param>
        <briefdescription>
<para>Convert iDynTree rotation object to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to iDynTree rotation object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="97" column="24" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Prashanth Ramadoss </para>
</simplesect>
<simplesect kind="copyright"><para>2020 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/Conversions/ManifConversions.h"/>
  </compounddef>
</doxygen>
